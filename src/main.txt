#include <Arduino.h>
// Arduino nRF24Lo1 Joystick Shield Car
// Receiver Car Code
#include <nRF24L01.h>
#include <RF24.h> //https://github.com/nRF24/RF24
#include <RF24_config.h>
#include <SPI.h>
#include <printf.h>

#define CE_PIN 9
#define CSN_PIN 10

const int Enable_A = 3;
const int Enable_B = 6;
const int RightMotorF = 5; // in1
const int RightMotorB = 7; // in2
const int LeftMotorF = 2;  // in3
const int LeftMotorB = 4;  // in4

RF24 radio(CE_PIN, CSN_PIN);
const uint64_t pipe = 0xE8E8F0F0E1LL;

struct Data_Package
{
  byte hiz;
  byte solsag;
  byte ilerigeri;
  byte pot;
  byte anahtar;
};

Data_Package data; // Create a variable with the above structure

void HiziAyarla(byte pwmHizSol, byte pwmHizSag)
{
  analogWrite(Enable_A, map(pwmHizSag, 0, 255, 65, 255));
  analogWrite(Enable_B, map(pwmHizSol, 0, 255, 65, 255));
}

void Duraklat()
{
  HiziAyarla(0, 0);
  Serial.println("Duraklatıldı");
  delay(50);
  digitalWrite(RightMotorB, LOW);
  digitalWrite(LeftMotorB, LOW);
  digitalWrite(RightMotorF, LOW);
  digitalWrite(LeftMotorF, LOW);
}

void IleriGit()
{
  digitalWrite(RightMotorB, LOW);
  digitalWrite(LeftMotorB, LOW);
  digitalWrite(RightMotorF, HIGH);
  digitalWrite(LeftMotorF, HIGH);
  Serial.println("Ileri");
}
void GeriGit()
{
  digitalWrite(RightMotorB, HIGH);
  digitalWrite(LeftMotorB, HIGH);
  digitalWrite(RightMotorF, LOW);
  digitalWrite(LeftMotorF, LOW);
  Serial.println("Geri");
}

void SagaHizliDon()
{
  digitalWrite(RightMotorB, HIGH);
  digitalWrite(LeftMotorB, LOW);
  digitalWrite(RightMotorF, LOW);
  digitalWrite(LeftMotorF, HIGH);
  Serial.println("hizli saga don");
}
void SolaHizliDon()
{
  digitalWrite(RightMotorB, LOW);
  digitalWrite(LeftMotorB, HIGH);
  digitalWrite(RightMotorF, HIGH);
  digitalWrite(LeftMotorF, LOW);
  Serial.println("hizli sola don");
}


void setup()
{
  pinMode(RightMotorF, OUTPUT);
  pinMode(RightMotorB, OUTPUT);
  pinMode(LeftMotorF, OUTPUT);
  pinMode(LeftMotorB, OUTPUT);
  pinMode(Enable_A, OUTPUT);
  pinMode(Enable_B, OUTPUT);

  Duraklat();
  Serial.begin(9600);
  if (!radio.begin())
  {
    Serial.println("nrf başlamadı");
    while (1)
    {
    }
  }
  radio.setDataRate(RF24_250KBPS);
  radio.openReadingPipe(1, pipe);
  radio.startListening();
  printf_begin();
  radio.printDetails();
}

void loop()
{

  if (radio.available())
  {
    radio.read(&data, sizeof(Data_Package));
    Serial.print(data.hiz);
    Serial.print("-");
    Serial.print(data.solsag);
    Serial.print("-");
    Serial.print(data.ilerigeri);
    Serial.print("-");
    Serial.print(data.pot);
    Serial.print("-");
    Serial.println(data.anahtar);
    if (data.solsag < 100 && data.ilerigeri > 150)
    {
      HiziAyarla(data.hiz, 10);
      IleriGit();
    }
    else if (data.solsag > 150 && data.ilerigeri > 150)
    {
      HiziAyarla(10, data.hiz);
      IleriGit();
    }
    else if (data.solsag < 100 && data.ilerigeri < 150 && data.ilerigeri > 100)
    { // tam sola
      HiziAyarla(100, 100);
      SolaHizliDon();
    }
    else if (data.solsag > 150 && data.ilerigeri < 150 && data.ilerigeri > 100)
    { // tam saga
      HiziAyarla(100, 100);
      SagaHizliDon();
    }
    else if (data.ilerigeri > 150)
    {

      HiziAyarla(data.hiz, data.hiz);
      IleriGit();
    }
    else if (data.ilerigeri<100)
    {
      HiziAyarla(data.hiz, data.hiz);
      GeriGit();
    }
    
    
    else
    {
      Duraklat();
    }
  }

  delay(100);
}
